{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","curso","openCursor","negociacoes","dados","result","push","value","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACOO,WADP,CACmB,CAAC,MAAKN,MAAN,CADnB,EACkC,WADlC,EAEOO,WAFP,CAEmB,MAAKP,MAFxB,EAGOQ,GAHP,CAGWP,UAHX,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,SAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,uCAAP;AACH,6BAHD;AAIH,yBAZM,CAAP;AAaH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,QAAQ,OAAKjB,WAAL,CACSO,WADT,CACqB,CAAC,OAAKN,MAAN,CADrB,EACoC,WADpC,EAESO,WAFT,CAEqB,OAAKP,MAF1B,EAGSiB,UAHT,EAAZ;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,kCAAMP,SAAN,GAAkB,aAAK;;AAEnB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAID,KAAJ,EAAW;AACPD,gDAAYG,IAAZ,CAAiBF,MAAMG,KAAvB;AACAH,0CAAMI,QAAN;AACH,iCAHD,MAGO;AACHpB,4CAAQe,WAAR;AACH;AACJ,6BAVD;;AAYAF,kCAAMN,OAAN,GAAgB,aAAK;AACjBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAOS,EAAEC,MAAF,CAASC,KAAT,CAAeS,IAAtB;AACH,6BAHD;AAKH,yBAzBM,CAAP;AA0BH;;;iDAEY;AAAA;;AACT,+BAAO,IAAItB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACOO,WADP,CACmB,CAAC,OAAKN,MAAN,CADnB,EACkC,WADlC,EAEOO,WAFP,CAEmB,OAAKP,MAFxB,EAGOyB,KAHP,EAAd;;AAKApB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,kCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAZM,CAAP;AAaH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoDao {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                                .transaction([this._store], 'readwrite')\r\n                                .objectStore(this._store)\r\n                                .add(negociacao);\r\n\r\n            request.onsuccess = e => resolve();\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível incluir a negociação');\r\n            }\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let curso = this._connection\r\n                                .transaction([this._store], 'readwrite')\r\n                                .objectStore(this._store)\r\n                                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            curso.onsuccess = e => {\r\n                \r\n                var dados = e.target.result;\r\n\r\n                if (dados) {\r\n                    negociacoes.push(dados.value);\r\n                    dados.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            curso.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject(e.target.error.name);\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                                .transaction([this._store], 'readwrite')\r\n                                .objectStore(this._store)\r\n                                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível apagar as negociações');\r\n            };                        \r\n        });\r\n    }\r\n}"]}