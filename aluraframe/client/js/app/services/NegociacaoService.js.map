{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["Negociacao","HttpService","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","map","Date","dado","data","quantidade","valor","catch","Error","erro","resolve","reject","get","negociação","getConnection","connection","dao","adiciona","conexao","listaTodos","console","log","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacao","equals","negociacaoExistente","error"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\nimport {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\n\r\nexport class NegociacaoService {\r\n\t\r\n\tconstructor () {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\t\r\n\tobterNegociacoes() {\r\n\t\treturn Promise.all([this.obterNegociacoesDaSemana(), this.obterNegociacoesDaSemanaAnterior(), this.obterNegociacoesDaSemanaRetrasada()])\r\n\t\t\t.then(periodos => {\r\n\t\t\t\tlet negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n\r\n\t\t\t\treturn negociacoes;\r\n\t\t\t})\r\n\t\t\t.catch(erro => {throw new Error(erro)});\r\n\t}\r\n\r\n\tobterNegociacoesDaSemana() {\r\n\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tthis._http.get('negociacoes/semana')\r\n\t\t\t\t.then(dados => resolve(dados.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n\t\t\t\t.catch(error => reject('Não foi possível obter as negociações da semana'));//fim this.http\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.get('negociacoes/anterior')\r\n                .then(dados => resolve(dados.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n                .catch(erro => reject('Não foi possível obter as negociações da semana anterior'));//fim this.http\r\n\r\n        });//fim promise\r\n    }//fim obterNegociacoesDaSemanaAnterior()\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.get('negociacoes/retrasada')\r\n                .then(dados => resolve(dados.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n                .catch(erro => reject('Não foi possível obter as negociações da semana retrasada'));//fim this.http\r\n\r\n        });//fim promise\r\n    }//fim obterNegociacoesDaSemanaRetrasada() \r\n\r\n\tcadastra(negociação) {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection =>\r\n\t\t\t\tnew NegociacaoDao(connection))\r\n\t\t\t.then(dao => \r\n\t\t\t\tdao.adiciona(negociação))\r\n\t\t\t.then(() => 'Negociação cadastrada com sucesso')\t\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação');\r\n\t\t\t});\t\r\n\t}\r\n\r\n\tlista() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t\t\t.getConnection()\r\n\t\t\t\t\t.then(conexao => new NegociacaoDao(conexao))\r\n\t\t\t\t\t.then(dao => dao.listaTodos())\t\t\t\t\t\r\n\t\t\t\t\t.catch(erro => {\r\n\t\t\t\t\t\tconsole.log(erro);\r\n\t\t\t\t\t\tthrow new Error('Não foi possível obter as negociações');\r\n\t\t\t\t\t});\r\n\t}\r\n\r\n\tapaga() {\r\n\t\treturn ConnectionFactory\r\n\t\t\t.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagaTodos())\r\n\t\t\t.catch(erro => {\r\n\t\t\t\tconsole.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações');\r\n\t\t\t});\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.obterNegociacoes()\r\n\t\t\t.then(negociacoes => negociacoes.filter(negociacao => \r\n\t\t\t\t!listaAtual.some(negociacaoExistente => \r\n\t\t\t\t\tnegociacao.equals(negociacaoExistente))))\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthrow new Error('Não foi possível importas as negociaçoes');\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n}"]}