{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","anoMesDia","test","Date","split","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAAaA,U;AAEZ,8BAAc;AAAA;;AACb,gBAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACA;;;;wCAEqBC,I,EAAM;AACrB,mBAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;wCAEoBC,S,EAAW;;AAElC,gBAAI,CAAC,oBAAoBC,IAApB,CAAyBD,SAAzB,CAAL,EACC,MAAM,IAAIL,KAAJ,CAAU,kCAAV,CAAN;;AAEK,sDAAWO,IAAX,mCACIF,UAAUG,KAAV,CAAgB,GAAhB,EACKC,GADL,CACS,UAACC,IAAD,EAAOC,MAAP;AAAA,qBAAkBD,OAAOC,SAAS,CAAlC;AAAA,aADT,CADJ;AAGH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\t\r\n\tconstructor() {\r\n\t\tthrow new Error('Esta classe não pode ser instanciada');\r\n\t}\r\n\t\r\n\t static dataParaTexto(data) {\r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;        \r\n    }\r\n\r\n    static textoParaData(anoMesDia) {\r\n\t\t\r\n\t\tif (!/\\d{4}-\\d{2}-\\d{2}/.test(anoMesDia))\r\n\t\t\tthrow new Error('Deve estar no formato aaaa-mm-dd');\r\n\r\n        return new Date(...\r\n            anoMesDia.split('-')\r\n                .map((item, indice) => item - indice % 2));                 \r\n    }\r\n\t\r\n\t/*static textoParaData(texto) {\r\n\r\n        // mudamos a validação para aceitar o novo formato!\r\n        if(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto)) \r\n            throw new Error('Deve estar no formato dd/mm/aaaa');\r\n\r\n        // veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.      \r\n        return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\r\n    }*/\r\n}   \r\n   \r\n  "]}